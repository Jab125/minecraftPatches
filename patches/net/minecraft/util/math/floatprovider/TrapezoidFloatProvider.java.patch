--- a/net/minecraft/util/math/floatprovider/TrapezoidFloatProvider.java	1970-01-12 08:58:04
+++ b/net/minecraft/util/math/floatprovider/TrapezoidFloatProvider.java	2023-03-30 21:03:20
@@ -7,7 +7,7 @@
 import net.minecraft.util.math.random.Random;
 
 public class TrapezoidFloatProvider extends FloatProvider {
-   public static final Codec<TrapezoidFloatProvider> CODEC = RecordCodecBuilder.create((instance) -> instance.group(Codec.FLOAT.fieldOf("min").forGetter((provider) -> provider.min), Codec.FLOAT.fieldOf("max").forGetter((provider) -> provider.max), Codec.FLOAT.fieldOf("plateau").forGetter((provider) -> provider.plateau)).apply(instance, TrapezoidFloatProvider::new)).comapFlatMap((provider) -> {
+   public static final Codec<TrapezoidFloatProvider> CODEC = RecordCodecBuilder.<TrapezoidFloatProvider>create((instance) -> instance.group(Codec.FLOAT.fieldOf("min").forGetter((provider) -> provider.min), Codec.FLOAT.fieldOf("max").forGetter((provider) -> provider.max), Codec.FLOAT.fieldOf("plateau").forGetter((provider) -> provider.plateau)).apply(instance, TrapezoidFloatProvider::new)).comapFlatMap((provider) -> {
       if (provider.max < provider.min) {
          return DataResult.error(() -> "Max must be larger than min: [" + provider.min + ", " + provider.max + "]");
       } else {
