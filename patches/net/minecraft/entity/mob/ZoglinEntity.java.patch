--- a/net/minecraft/entity/mob/ZoglinEntity.java
+++ b/net/minecraft/entity/mob/ZoglinEntity.java
@@ -16,19 +16,7 @@
 import net.minecraft.entity.ai.brain.MemoryModuleType;
 import net.minecraft.entity.ai.brain.sensor.Sensor;
 import net.minecraft.entity.ai.brain.sensor.SensorType;
-import net.minecraft.entity.ai.brain.task.ForgetAttackTargetTask;
-import net.minecraft.entity.ai.brain.task.GoTowardsLookTargetTask;
-import net.minecraft.entity.ai.brain.task.LookAroundTask;
-import net.minecraft.entity.ai.brain.task.LookAtMobWithIntervalTask;
-import net.minecraft.entity.ai.brain.task.LookTargetUtil;
-import net.minecraft.entity.ai.brain.task.MeleeAttackTask;
-import net.minecraft.entity.ai.brain.task.RandomTask;
-import net.minecraft.entity.ai.brain.task.RangedApproachTask;
-import net.minecraft.entity.ai.brain.task.StrollTask;
-import net.minecraft.entity.ai.brain.task.TaskTriggerer;
-import net.minecraft.entity.ai.brain.task.UpdateAttackTargetTask;
-import net.minecraft.entity.ai.brain.task.WaitTask;
-import net.minecraft.entity.ai.brain.task.WanderAroundTask;
+import net.minecraft.entity.ai.brain.task.*;
 import net.minecraft.entity.attribute.DefaultAttributeContainer;
 import net.minecraft.entity.attribute.EntityAttributes;
 import net.minecraft.entity.damage.DamageSource;
@@ -86,7 +74,7 @@
    }
 
    private static void addIdleTasks(Brain<ZoglinEntity> brain) {
-      brain.setTaskList(Activity.IDLE, 10, ImmutableList.of(UpdateAttackTargetTask.create(ZoglinEntity::getHoglinTarget), LookAtMobWithIntervalTask.follow(8.0F, UniformIntProvider.create(30, 60)), new RandomTask(ImmutableList.of(Pair.of(StrollTask.create(0.4F), 2), Pair.of(GoTowardsLookTargetTask.create(0.4F, 3), 2), Pair.of(new WaitTask(30, 60), 1)))));
+      brain.setTaskList(Activity.IDLE, 10, ImmutableList.<Task<? super ZoglinEntity>>of(UpdateAttackTargetTask.create(ZoglinEntity::getHoglinTarget), LookAtMobWithIntervalTask.follow(8.0F, UniformIntProvider.create(30, 60)), new RandomTask<>(ImmutableList.of(Pair.of(StrollTask.create(0.4F), 2), Pair.of(GoTowardsLookTargetTask.create(0.4F, 3), 2), Pair.of(new WaitTask(30, 60), 1)))));
    }
 
    private static void addFightTasks(Brain<ZoglinEntity> brain) {
@@ -171,13 +159,13 @@
    }
 
    public Brain<ZoglinEntity> getBrain() {
-      return super.getBrain();
+      return (Brain<ZoglinEntity>) super.getBrain();
    }
 
    protected void tickBrain() {
-      Activity activity = (Activity)this.brain.getFirstPossibleNonCoreActivity().orElse((Object)null);
+      Activity activity = (Activity)this.brain.getFirstPossibleNonCoreActivity().orElse(null);
       this.brain.resetPossibleActivities(ImmutableList.of(Activity.FIGHT, Activity.IDLE));
-      Activity activity2 = (Activity)this.brain.getFirstPossibleNonCoreActivity().orElse((Object)null);
+      Activity activity2 = (Activity)this.brain.getFirstPossibleNonCoreActivity().orElse(null);
       if (activity2 == Activity.FIGHT && activity != Activity.FIGHT) {
          this.playAngrySound();
       }
