--- a/net/minecraft/predicate/entity/LocationPredicate.java	2023-03-30 19:29:26
+++ b/net/minecraft/predicate/entity/LocationPredicate.java	2023-03-30 19:29:44
@@ -146,8 +146,8 @@
          NumberRange.FloatRange floatRange = NumberRange.FloatRange.fromJson(jsonObject2.get("x"));
          NumberRange.FloatRange floatRange2 = NumberRange.FloatRange.fromJson(jsonObject2.get("y"));
          NumberRange.FloatRange floatRange3 = NumberRange.FloatRange.fromJson(jsonObject2.get("z"));
-         RegistryKey<World> registryKey = jsonObject.has("dimension") ? (RegistryKey)Identifier.CODEC.parse(JsonOps.INSTANCE, jsonObject.get("dimension")).resultOrPartial(LOGGER::error).map((identifier) -> RegistryKey.of(RegistryKeys.WORLD, identifier)).orElse((Object)null) : null;
-         RegistryKey<Structure> registryKey2 = jsonObject.has("structure") ? (RegistryKey)Identifier.CODEC.parse(JsonOps.INSTANCE, jsonObject.get("structure")).resultOrPartial(LOGGER::error).map((identifier) -> RegistryKey.of(RegistryKeys.STRUCTURE, identifier)).orElse((Object)null) : null;
+         RegistryKey<World> registryKey = jsonObject.has("dimension") ? (RegistryKey)Identifier.CODEC.parse(JsonOps.INSTANCE, jsonObject.get("dimension")).resultOrPartial(LOGGER::error).map((identifier) -> RegistryKey.of(RegistryKeys.WORLD, identifier)).orElse(null) : null;
+         RegistryKey<Structure> registryKey2 = jsonObject.has("structure") ? (RegistryKey)Identifier.CODEC.parse(JsonOps.INSTANCE, jsonObject.get("structure")).resultOrPartial(LOGGER::error).map((identifier) -> RegistryKey.of(RegistryKeys.STRUCTURE, identifier)).orElse(null) : null;
          RegistryKey<Biome> registryKey3 = null;
          if (jsonObject.has("biome")) {
             Identifier identifier = new Identifier(JsonHelper.getString(jsonObject, "biome"));
