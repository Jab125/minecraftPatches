--- a/net/minecraft/world/gen/chunk/Blender.java	1970-01-12 08:58:04
+++ b/net/minecraft/world/gen/chunk/Blender.java	2023-03-30 21:03:20
@@ -109,13 +109,13 @@
          MutableDouble mutableDouble2 = new MutableDouble(0.0D);
          MutableDouble mutableDouble3 = new MutableDouble(Double.POSITIVE_INFINITY);
          this.blendingData.forEach((chunkPos, data) -> data.acceptHeights(BiomeCoords.fromChunk(ChunkPos.getPackedX(chunkPos)), BiomeCoords.fromChunk(ChunkPos.getPackedZ(chunkPos)), (biomeX, biomeZ, height) -> {
-               double d = MathHelper.hypot((double)(i - biomeX), (double)(j - biomeZ));
-               if (!(d > (double)BLENDING_BIOME_DISTANCE_THRESHOLD)) {
-                  if (d < mutableDouble3.doubleValue()) {
-                     mutableDouble3.setValue(d);
+               double d2 = MathHelper.hypot((double)(i - biomeX), (double)(j - biomeZ));
+               if (!(d2 > (double)BLENDING_BIOME_DISTANCE_THRESHOLD)) {
+                  if (d2 < mutableDouble3.doubleValue()) {
+                     mutableDouble3.setValue(d2);
                   }
 
-                  double e = 1.0D / (d * d * d * d);
+                  double e = 1.0D / (d2 * d2 * d2 * d2);
                   mutableDouble2.add(height * e);
                   mutableDouble.add(e);
                }
@@ -150,13 +150,13 @@
          MutableDouble mutableDouble2 = new MutableDouble(0.0D);
          MutableDouble mutableDouble3 = new MutableDouble(Double.POSITIVE_INFINITY);
          this.closeBlendingData.forEach((chunkPos, data) -> data.acceptCollidableBlockDensities(BiomeCoords.fromChunk(ChunkPos.getPackedX(chunkPos)), BiomeCoords.fromChunk(ChunkPos.getPackedZ(chunkPos)), j - 1, j + 1, (biomeX, halfSectionY, biomeZ, collidableBlockDensity) -> {
-               double d = MathHelper.magnitude((double)(i - biomeX), (double)((j - halfSectionY) * 2), (double)(k - biomeZ));
-               if (!(d > 2.0D)) {
-                  if (d < mutableDouble3.doubleValue()) {
-                     mutableDouble3.setValue(d);
+               double d2 = MathHelper.magnitude((double)(i - biomeX), (double)((j - halfSectionY) * 2), (double)(k - biomeZ));
+               if (!(d2 > 2.0D)) {
+                  if (d2 < mutableDouble3.doubleValue()) {
+                     mutableDouble3.setValue(d2);
                   }
 
-                  double e = 1.0D / (d * d * d * d);
+                  double e = 1.0D / (d2 * d2 * d2 * d2);
                   mutableDouble2.add(collidableBlockDensity * e);
                   mutableDouble.add(e);
                }
