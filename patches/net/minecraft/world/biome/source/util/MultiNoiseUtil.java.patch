--- a/net/minecraft/world/biome/source/util/MultiNoiseUtil.java	2023-03-30 19:29:24
+++ b/net/minecraft/world/biome/source/util/MultiNoiseUtil.java	2023-03-30 20:05:23
@@ -63,7 +63,7 @@
       private final MultiNoiseUtil.SearchTree<T> tree;
 
       public static <T> Codec<MultiNoiseUtil.Entries<T>> createCodec(MapCodec<T> entryCodec) {
-         return Codecs.nonEmptyList(RecordCodecBuilder.create((instance) -> instance.group(MultiNoiseUtil.NoiseHypercube.CODEC.fieldOf("parameters").forGetter(Pair::getFirst), entryCodec.forGetter(Pair::getSecond)).apply(instance, Pair::of)).listOf()).xmap(MultiNoiseUtil.Entries::new, MultiNoiseUtil.Entries::getEntries);
+         return Codecs.nonEmptyList(RecordCodecBuilder.create((instance) -> instance.group(MultiNoiseUtil.NoiseHypercube.CODEC.fieldOf("parameters").forGetter(t -> ((Pair<NoiseHypercube, T>)t).getFirst()), entryCodec.forGetter(t -> ((Pair<NoiseHypercube, T>)t).getSecond())).apply(instance, Pair::of)).listOf()).xmap(entries1 -> new Entries(entries1), tEntries -> ((MultiNoiseUtil.Entries)tEntries).getEntries());
       }
 
       public Entries(List<Pair<MultiNoiseUtil.NoiseHypercube, T>> entries) {
@@ -188,12 +188,6 @@
    }
 
    public static record NoiseValuePoint(long temperatureNoise, long humidityNoise, long continentalnessNoise, long erosionNoise, long depth, long weirdnessNoise) {
-      final long temperatureNoise;
-      final long humidityNoise;
-      final long continentalnessNoise;
-      final long erosionNoise;
-      final long depth;
-      final long weirdnessNoise;
 
       @VisibleForTesting
       protected long[] getNoiseValueList() {
@@ -367,7 +361,7 @@
             List<MultiNoiseUtil.ParameterRange> list = Lists.newArrayList();
 
             for(int j = 0; j < 7; ++j) {
-               list.add((Object)null);
+               list.add(null);
             }
 
             for(MultiNoiseUtil.SearchTree.TreeNode<T> treeNode : subTree) {
@@ -456,4 +450,4 @@
          }
       }
    }
-}
+}
\ No newline at end of file
