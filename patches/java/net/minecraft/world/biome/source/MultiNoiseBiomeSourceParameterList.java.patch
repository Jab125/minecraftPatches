--- a/java/net/minecraft/world/biome/source/MultiNoiseBiomeSourceParameterList.java
+++ b/java/net/minecraft/world/biome/source/MultiNoiseBiomeSourceParameterList.java
@@ -53,7 +53,6 @@
    }
 
    public static record Preset(Identifier id, MultiNoiseBiomeSourceParameterList.Preset.BiomeSourceFunction biomeSourceFunction) {
-      final MultiNoiseBiomeSourceParameterList.Preset.BiomeSourceFunction biomeSourceFunction;
       public static final MultiNoiseBiomeSourceParameterList.Preset NETHER = new MultiNoiseBiomeSourceParameterList.Preset(new Identifier("nether"), new MultiNoiseBiomeSourceParameterList.Preset.BiomeSourceFunction() {
          public <T> MultiNoiseUtil.Entries<T> apply(Function<RegistryKey<Biome>, T> function) {
             return new MultiNoiseUtil.Entries<>(List.of(Pair.of(MultiNoiseUtil.createNoiseHypercube(0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F), function.apply(BiomeKeys.NETHER_WASTES)), Pair.of(MultiNoiseUtil.createNoiseHypercube(0.0F, -0.5F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F), function.apply(BiomeKeys.SOUL_SAND_VALLEY)), Pair.of(MultiNoiseUtil.createNoiseHypercube(0.4F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F), function.apply(BiomeKeys.CRIMSON_FOREST)), Pair.of(MultiNoiseUtil.createNoiseHypercube(0.0F, 0.5F, 0.0F, 0.0F, 0.0F, 0.0F, 0.375F), function.apply(BiomeKeys.WARPED_FOREST)), Pair.of(MultiNoiseUtil.createNoiseHypercube(-0.5F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.175F), function.apply(BiomeKeys.BASALT_DELTAS))));
@@ -101,4 +100,4 @@
          <T> MultiNoiseUtil.Entries<T> apply(Function<RegistryKey<Biome>, T> biomeEntryGetter);
       }
    }
 }
