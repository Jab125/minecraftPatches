--- a/java/net/minecraft/entity/mob/WardenEntity.java
+++ b/java/net/minecraft/entity/mob/WardenEntity.java
@@ -338,7 +338,7 @@
    }
 
    public Brain<WardenEntity> getBrain() {
-      return super.getBrain();
+      return (Brain<WardenEntity>) super.getBrain();
    }
 
    protected void sendAiDebugData() {
@@ -391,14 +391,14 @@
    public void readCustomDataFromNbt(NbtCompound nbt) {
       super.readCustomDataFromNbt(nbt);
       if (nbt.contains("anger")) {
-         WardenAngerManager.createCodec(this::isValidTarget).parse(new Dynamic(NbtOps.INSTANCE, nbt.get("anger"))).resultOrPartial(LOGGER::error).ifPresent((angerManager) -> {
+         WardenAngerManager.createCodec(this::isValidTarget).parse(new Dynamic<>(NbtOps.INSTANCE, nbt.get("anger"))).resultOrPartial(LOGGER::error).ifPresent((angerManager) -> {
             this.angerManager = angerManager;
          });
          this.updateAnger();
       }
 
       if (nbt.contains("listener", 10)) {
-         VibrationListener.createCodec(this).parse(new Dynamic(NbtOps.INSTANCE, nbt.getCompound("listener"))).resultOrPartial(LOGGER::error).ifPresent((vibrationListener) -> {
+         VibrationListener.createCodec(this).parse(new Dynamic<>(NbtOps.INSTANCE, nbt.getCompound("listener"))).resultOrPartial(LOGGER::error).ifPresent((vibrationListener) -> {
             this.gameEventHandler.setListener(vibrationListener, this.world);
          });
       }
